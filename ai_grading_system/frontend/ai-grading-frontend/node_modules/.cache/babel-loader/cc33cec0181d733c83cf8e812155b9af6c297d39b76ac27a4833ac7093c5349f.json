{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhprasad/ai_grading_system/frontend/ai-grading-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport UploadRubric from './UploadRubric';\nimport LoadingBar from './LoadingBar/LoadingBar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [grade, setGrade] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setProgress(0);\n    try {\n      const response = await axios.post('http://localhost:5000/submit_assignment', {\n        text\n      }, {\n        onDownloadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(percentCompleted);\n        }\n      });\n\n      // Simulate progress update until full completion\n      while (progress < 100) {\n        setProgress(prev => Math.min(prev + 10, 100));\n        await new Promise(resolve => setTimeout(resolve, 100));\n      }\n      const parsedGrade = parseGrade(response.data.grade);\n      setGrade(parsedGrade);\n    } catch (error) {\n      console.error('Error submitting assignment:', error);\n      alert('Failed to submit assignment.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const parseGrade = gradeText => {\n    const lines = gradeText.split('\\n');\n    let formattedGrade = '';\n    let feedback = [];\n    lines.forEach(line => {\n      if (line.includes(':')) {\n        const [category, score] = line.split(':');\n        formattedGrade += `${category.trim()}: ${score.trim()}\\n`;\n      } else {\n        if (line.trim()) {\n          feedback.push(line.trim());\n        }\n      }\n    });\n    return {\n      formattedGrade,\n      feedback\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Grading System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadRubric, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Write your assignment here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingBar, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }, this), grade && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grade-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Assignment Grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"grade-text\",\n        children: grade.formattedGrade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"feedback-list\",\n        children: grade.feedback.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"84FX8/x9YPSSrh+m28C8lVascts=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","UploadRubric","LoadingBar","jsxDEV","_jsxDEV","App","_s","text","setText","grade","setGrade","loading","setLoading","progress","setProgress","handleSubmit","e","preventDefault","response","post","onDownloadProgress","progressEvent","percentCompleted","Math","round","loaded","total","prev","min","Promise","resolve","setTimeout","parsedGrade","parseGrade","data","error","console","alert","gradeText","lines","split","formattedGrade","feedback","forEach","line","includes","category","score","trim","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","type","map","item","index","_c","$RefreshReg$"],"sources":["/Users/rishabhprasad/ai_grading_system/frontend/ai-grading-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport UploadRubric from './UploadRubric';\nimport LoadingBar from './LoadingBar/LoadingBar'; \nimport './App.css';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [grade, setGrade] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setProgress(0);\n\n    try {\n      const response = await axios.post('http://localhost:5000/submit_assignment', { text }, {\n        onDownloadProgress: (progressEvent) => {\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n          setProgress(percentCompleted);\n        }\n      });\n\n      // Simulate progress update until full completion\n      while (progress < 100) {\n        setProgress((prev) => Math.min(prev + 10, 100));\n        await new Promise(resolve => setTimeout(resolve, 100));\n      }\n\n      const parsedGrade = parseGrade(response.data.grade);\n      setGrade(parsedGrade);\n    } catch (error) {\n      console.error('Error submitting assignment:', error);\n      alert('Failed to submit assignment.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const parseGrade = (gradeText) => {\n    const lines = gradeText.split('\\n');\n    let formattedGrade = '';\n    let feedback = [];\n\n    lines.forEach(line => {\n      if (line.includes(':')) {\n        const [category, score] = line.split(':');\n        formattedGrade += `${category.trim()}: ${score.trim()}\\n`;\n      } else {\n        if (line.trim()) {\n          feedback.push(line.trim());\n        }\n      }\n    });\n\n    return { formattedGrade, feedback };\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>AI Grading System</h1>\n      <UploadRubric />\n\n      <form onSubmit={handleSubmit}>\n        <textarea\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Write your assignment here\"\n        ></textarea>\n        <button type=\"submit\">Submit</button>\n      </form>\n\n      {loading && <LoadingBar progress={progress} />}\n\n      {grade && (\n        <div className=\"grade-container\">\n          <h2>Assignment Grade</h2>\n          <pre className=\"grade-text\">{grade.formattedGrade}</pre>\n          <ul className=\"feedback-list\">\n            {grade.feedback.map((item, index) => (\n              <li key={index}>{item}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}