{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhprasad/ai_grading_system/frontend/ai-grading-frontend/src/TestGrading/TestGrading.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport LoadingBar from '../LoadingBar/LoadingBar';\nimport './TestGrading.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestGrading = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [grade, setGrade] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [markedAnswers, setMarkedAnswers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const fileInputRef = useRef(null);\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    setImage(URL.createObjectURL(file));\n    uploadImage(file);\n  };\n  const uploadImage = async file => {\n    setLoading(true);\n    setProgress(0);\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await axios.post('http://localhost:5000/grade-test', formData);\n      let currentProgress = 0;\n      const interval = setInterval(() => {\n        if (currentProgress >= 100) {\n          clearInterval(interval);\n        } else {\n          currentProgress += 10;\n          setProgress(currentProgress);\n        }\n      }, 100);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      setGrade(response.data.grade);\n      setExtractedText(response.data.extracted_text);\n      setMarkedAnswers(response.data.marked_answers);\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      alert('Failed to upload image.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleReset = () => {\n    setImage(null);\n    setGrade(null);\n    setExtractedText('');\n    setMarkedAnswers([]);\n    setProgress(0);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container test-grading\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test Grading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageUpload,\n      ref: fileInputRef,\n      className: \"form-control-file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Uploaded test\",\n      className: \"uploaded-image img-thumbnail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingBar, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }, this), grade && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grade-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          whiteSpace: 'pre-wrap',\n          fontFamily: 'monospace'\n        },\n        children: grade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), (grade || extractedText || markedAnswers.length > 0) && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      className: \"btn btn-secondary\",\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(TestGrading, \"0j9jFE4BqaKfaVtlI9qlvNs2Sog=\");\n_c = TestGrading;\nexport default TestGrading;\nvar _c;\n$RefreshReg$(_c, \"TestGrading\");","map":{"version":3,"names":["React","useState","useRef","axios","LoadingBar","jsxDEV","_jsxDEV","TestGrading","_s","image","setImage","grade","setGrade","extractedText","setExtractedText","markedAnswers","setMarkedAnswers","loading","setLoading","progress","setProgress","fileInputRef","handleImageUpload","e","file","target","files","URL","createObjectURL","uploadImage","formData","FormData","append","response","post","currentProgress","interval","setInterval","clearInterval","Promise","resolve","setTimeout","data","extracted_text","marked_answers","error","console","alert","handleReset","current","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","ref","src","alt","style","whiteSpace","fontFamily","length","onClick","_c","$RefreshReg$"],"sources":["/Users/rishabhprasad/ai_grading_system/frontend/ai-grading-frontend/src/TestGrading/TestGrading.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport LoadingBar from '../LoadingBar/LoadingBar';\nimport './TestGrading.css';\n\nconst TestGrading = () => {\n  const [image, setImage] = useState(null);\n  const [grade, setGrade] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [markedAnswers, setMarkedAnswers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const fileInputRef = useRef(null);\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    setImage(URL.createObjectURL(file));\n    uploadImage(file);\n  };\n\n  const uploadImage = async (file) => {\n    setLoading(true);\n    setProgress(0);\n\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      const response = await axios.post('http://localhost:5000/grade-test', formData);\n\n      let currentProgress = 0;\n      const interval = setInterval(() => {\n        if (currentProgress >= 100) {\n          clearInterval(interval);\n        } else {\n          currentProgress += 10;\n          setProgress(currentProgress);\n        }\n      }, 100);\n\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      setGrade(response.data.grade);\n      setExtractedText(response.data.extracted_text);\n      setMarkedAnswers(response.data.marked_answers);\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      alert('Failed to upload image.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleReset = () => {\n    setImage(null);\n    setGrade(null);\n    setExtractedText('');\n    setMarkedAnswers([]);\n    setProgress(0);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  return (\n    <div className=\"container test-grading\">\n      <h1>Test Grading</h1>\n      <input \n        type=\"file\" \n        accept=\"image/*\" \n        onChange={handleImageUpload} \n        ref={fileInputRef} \n        className=\"form-control-file\"\n      />\n      {image && <img src={image} alt=\"Uploaded test\" className=\"uploaded-image img-thumbnail\" />}\n      \n      {loading && <LoadingBar progress={progress} />}\n\n      {grade && (\n        <div className=\"grade-container\">\n          <h2>Grade</h2>\n          <div style={{ whiteSpace: 'pre-wrap', fontFamily: 'monospace' }}>{grade}</div>\n        </div>\n      )}\n      {(grade || extractedText || markedAnswers.length > 0) && (\n        <button onClick={handleReset} className=\"btn btn-secondary\">Reset</button>\n      )}\n    </div>\n  );\n};\n\nexport default TestGrading;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}