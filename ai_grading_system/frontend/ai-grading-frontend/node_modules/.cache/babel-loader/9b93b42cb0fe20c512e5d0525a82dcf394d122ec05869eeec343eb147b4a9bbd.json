{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhprasad/ai_grading_system/frontend/ai-grading-frontend/src/TestGrading/TestGrading.js\",\n  _s = $RefreshSig$();\n// src/TestGrading/TestGrading.js\nimport React, { useState } from 'react';\nimport Tesseract from 'tesseract.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestGrading = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [text, setText] = useState('');\n  const [grade, setGrade] = useState(null);\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    setImage(URL.createObjectURL(file));\n    extractText(file);\n  };\n  const extractText = file => {\n    Tesseract.recognize(file, 'eng', {\n      logger: m => console.log(m)\n    }).then(({\n      data: {\n        text\n      }\n    }) => {\n      setText(text);\n      gradeTest(text);\n    });\n  };\n  const gradeTest = async text => {\n    const response = await fetch('/api/grade_test', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text\n      })\n    });\n    const result = await response.json();\n    setGrade(result.grade);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test Grading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Uploaded test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), text && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Extracted Text: \", text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this), grade && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Grade: \", grade]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TestGrading, \"vUTEuXHK9sagbgzEK/zSOONrmpI=\");\n_c = TestGrading;\nexport default TestGrading;\nvar _c;\n$RefreshReg$(_c, \"TestGrading\");","map":{"version":3,"names":["React","useState","Tesseract","jsxDEV","_jsxDEV","TestGrading","_s","image","setImage","text","setText","grade","setGrade","handleImageUpload","e","file","target","files","URL","createObjectURL","extractText","recognize","logger","m","console","log","then","data","gradeTest","response","fetch","method","headers","body","JSON","stringify","result","json","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","src","alt","_c","$RefreshReg$"],"sources":["/Users/rishabhprasad/ai_grading_system/frontend/ai-grading-frontend/src/TestGrading/TestGrading.js"],"sourcesContent":["// src/TestGrading/TestGrading.js\nimport React, { useState } from 'react';\nimport Tesseract from 'tesseract.js';\n\nconst TestGrading = () => {\n  const [image, setImage] = useState(null);\n  const [text, setText] = useState('');\n  const [grade, setGrade] = useState(null);\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    setImage(URL.createObjectURL(file));\n    extractText(file);\n  };\n\n  const extractText = (file) => {\n    Tesseract.recognize(\n      file,\n      'eng',\n      {\n        logger: (m) => console.log(m),\n      }\n    ).then(({ data: { text } }) => {\n      setText(text);\n      gradeTest(text);\n    });\n  };\n\n  const gradeTest = async (text) => {\n    const response = await fetch('/api/grade_test', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ text }),\n    });\n    const result = await response.json();\n    setGrade(result.grade);\n  };\n\n  return (\n    <div>\n      <h1>Test Grading</h1>\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\n      {image && <img src={image} alt=\"Uploaded test\" />}\n      {text && <p>Extracted Text: {text}</p>}\n      {grade && <p>Grade: {grade}</p>}\n    </div>\n  );\n};\n\nexport default TestGrading;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9BT,QAAQ,CAACU,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAAC;IACnCK,WAAW,CAACL,IAAI,CAAC;EACnB,CAAC;EAED,MAAMK,WAAW,GAAIL,IAAI,IAAK;IAC5Bb,SAAS,CAACmB,SAAS,CACjBN,IAAI,EACJ,KAAK,EACL;MACEO,MAAM,EAAGC,CAAC,IAAKC,OAAO,CAACC,GAAG,CAACF,CAAC;IAC9B,CACF,CAAC,CAACG,IAAI,CAAC,CAAC;MAAEC,IAAI,EAAE;QAAElB;MAAK;IAAE,CAAC,KAAK;MAC7BC,OAAO,CAACD,IAAI,CAAC;MACbmB,SAAS,CAACnB,IAAI,CAAC;IACjB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMmB,SAAS,GAAG,MAAOnB,IAAI,IAAK;IAChC,MAAMoB,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;MAC9CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE1B;MAAK,CAAC;IAC/B,CAAC,CAAC;IACF,MAAM2B,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACpCzB,QAAQ,CAACwB,MAAM,CAACzB,KAAK,CAAC;EACxB,CAAC;EAED,oBACEP,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAAkC,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBtC,OAAA;MAAOuC,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAEhC;IAAkB;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClEnC,KAAK,iBAAIH,OAAA;MAAK0C,GAAG,EAAEvC,KAAM;MAACwC,GAAG,EAAC;IAAe;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChDjC,IAAI,iBAAIL,OAAA;MAAAkC,QAAA,GAAG,kBAAgB,EAAC7B,IAAI;IAAA;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrC/B,KAAK,iBAAIP,OAAA;MAAAkC,QAAA,GAAG,SAAO,EAAC3B,KAAK;IAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV,CAAC;AAACpC,EAAA,CA7CID,WAAW;AAAA2C,EAAA,GAAX3C,WAAW;AA+CjB,eAAeA,WAAW;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}