{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhprasad/ai_grading_system/frontend/ai-grading-frontend/src/UploadRubric.js\",\n  _s = $RefreshSig$();\n// src/UploadRubric.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadRubric() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert('Please select a file first.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://localhost:5000/upload_rubric', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setUploadStatus('Rubric uploaded successfully.');\n    } catch (error) {\n      console.error('Error uploading rubric:', error);\n      setUploadStatus('Failed to upload rubric.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UploadRubric\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Rubric\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadRubric, \"TrDKe7Vv9s9wZuOzXNj8ZJyQMao=\");\n_c = UploadRubric;\nexport default UploadRubric;\nvar _c;\n$RefreshReg$(_c, \"UploadRubric\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadRubric","_s","file","setFile","uploadStatus","setUploadStatus","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","response","post","headers","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/rishabhprasad/ai_grading_system/frontend/ai-grading-frontend/src/UploadRubric.js"],"sourcesContent":["// src/UploadRubric.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction UploadRubric() {\n    const [file, setFile] = useState(null);\n    const [uploadStatus, setUploadStatus] = useState('');\n\n    const handleFileChange = (e) => {\n        setFile(e.target.files[0]);\n    };\n\n    const handleUpload = async () => {\n        if (!file) {\n            alert('Please select a file first.');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('file', file);\n\n        try {\n            const response = await axios.post('http://localhost:5000/upload_rubric', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n            setUploadStatus('Rubric uploaded successfully.');\n        } catch (error) {\n            console.error('Error uploading rubric:', error);\n            setUploadStatus('Failed to upload rubric.');\n        }\n    };\n\n    return (\n        <div className=\"UploadRubric\">\n            <h2>Upload Rubric</h2>\n            <input type=\"file\" accept=\".pdf\" onChange={handleFileChange} />\n            <button onClick={handleUpload}>Upload</button>\n            {uploadStatus && <p>{uploadStatus}</p>}\n        </div>\n    );\n}\n\nexport default UploadRubric;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMU,gBAAgB,GAAIC,CAAC,IAAK;IAC5BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACR,IAAI,EAAE;MACPS,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACJ;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEZ,IAAI,CAAC;IAE7B,IAAI;MACA,MAAMa,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,qCAAqC,EAAEJ,QAAQ,EAAE;QAC/EK,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACFZ,eAAe,CAAC,+BAA+B,CAAC;IACpD,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/Cb,eAAe,CAAC,0BAA0B,CAAC;IAC/C;EACJ,CAAC;EAED,oBACIN,OAAA;IAAKqB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBtB,OAAA;MAAAsB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB1B,OAAA;MAAO2B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAEtB;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/D1B,OAAA;MAAQ8B,OAAO,EAAEnB,YAAa;MAAAW,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7CrB,YAAY,iBAAIL,OAAA;MAAAsB,QAAA,EAAIjB;IAAY;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEd;AAACxB,EAAA,CAtCQD,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAwCrB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}