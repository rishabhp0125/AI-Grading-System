{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhprasad/ai_grading_system/frontend/ai-grading-frontend/src/TestGrading/TestGrading.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport LoadingBar from '../LoadingBar/LoadingBar';\nimport './TestGrading.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestGrading = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [grade, setGrade] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [markedAnswers, setMarkedAnswers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    setImage(URL.createObjectURL(file));\n    uploadImage(file);\n  };\n  const uploadImage = async file => {\n    setLoading(true);\n    setProgress(0);\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await axios.post('http://localhost:5000/grade-test', formData, {\n        onUploadProgress: progressEvent => {\n          const total = progressEvent.total;\n          const current = progressEvent.loaded;\n          setProgress(Math.round(current / total * 100));\n        }\n      });\n\n      // Simulate processing time to show the loading bar incrementally\n      for (let i = progress; i <= 100; i += 10) {\n        await new Promise(resolve => setTimeout(resolve, 100));\n        setProgress(i);\n      }\n      setGrade(response.data.grade);\n      setExtractedText(response.data.extracted_text);\n      setMarkedAnswers(response.data.marked_answers);\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      alert('Failed to upload image.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleReset = () => {\n    setImage(null);\n    setGrade(null);\n    setExtractedText('');\n    setMarkedAnswers([]);\n    setProgress(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test-grading\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test Grading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Uploaded test\",\n      style: {\n        maxWidth: '100%',\n        height: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingBar, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }, this), grade && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grade-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          whiteSpace: 'pre-wrap',\n          fontFamily: 'monospace'\n        },\n        children: grade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), (grade || extractedText || markedAnswers.length > 0) && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(TestGrading, \"sp1yg2G+5QyUmmX8XQ9OKPSjpzU=\");\n_c = TestGrading;\nexport default TestGrading;\nvar _c;\n$RefreshReg$(_c, \"TestGrading\");","map":{"version":3,"names":["React","useState","axios","LoadingBar","jsxDEV","_jsxDEV","TestGrading","_s","image","setImage","grade","setGrade","extractedText","setExtractedText","markedAnswers","setMarkedAnswers","loading","setLoading","progress","setProgress","handleImageUpload","e","file","target","files","URL","createObjectURL","uploadImage","formData","FormData","append","response","post","onUploadProgress","progressEvent","total","current","loaded","Math","round","i","Promise","resolve","setTimeout","data","extracted_text","marked_answers","error","console","alert","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","src","alt","style","maxWidth","height","whiteSpace","fontFamily","length","onClick","_c","$RefreshReg$"],"sources":["/Users/rishabhprasad/ai_grading_system/frontend/ai-grading-frontend/src/TestGrading/TestGrading.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport LoadingBar from '../LoadingBar/LoadingBar';\nimport './TestGrading.css';\n\nconst TestGrading = () => {\n  const [image, setImage] = useState(null);\n  const [grade, setGrade] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [markedAnswers, setMarkedAnswers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    setImage(URL.createObjectURL(file));\n    uploadImage(file);\n  };\n\n  const uploadImage = async (file) => {\n    setLoading(true);\n    setProgress(0);\n\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      const response = await axios.post('http://localhost:5000/grade-test', formData, {\n        onUploadProgress: (progressEvent) => {\n          const total = progressEvent.total;\n          const current = progressEvent.loaded;\n          setProgress(Math.round((current / total) * 100));\n        },\n      });\n\n      // Simulate processing time to show the loading bar incrementally\n      for (let i = progress; i <= 100; i += 10) {\n        await new Promise((resolve) => setTimeout(resolve, 100));\n        setProgress(i);\n      }\n\n      setGrade(response.data.grade);\n      setExtractedText(response.data.extracted_text);\n      setMarkedAnswers(response.data.marked_answers);\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      alert('Failed to upload image.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleReset = () => {\n    setImage(null);\n    setGrade(null);\n    setExtractedText('');\n    setMarkedAnswers([]);\n    setProgress(0);\n  };\n\n  return (\n    <div className=\"test-grading\">\n      <h1>Test Grading</h1>\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\n      {image && <img src={image} alt=\"Uploaded test\" style={{ maxWidth: '100%', height: 'auto' }} />}\n      \n      {loading && <LoadingBar progress={progress} />}\n\n\n      {grade && (\n        <div className=\"grade-container\">\n          <h2>Grade</h2>\n          <div style={{ whiteSpace: 'pre-wrap', fontFamily: 'monospace' }}>{grade}</div>\n        </div>\n      )}\n      {(grade || extractedText || markedAnswers.length > 0) && (\n        <button onClick={handleReset}>Reset</button>\n      )}\n    </div>\n  );\n};\n\nexport default TestGrading;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}